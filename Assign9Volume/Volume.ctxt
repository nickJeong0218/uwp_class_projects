#BlueJ class context
comment0.target=Volume
comment0.text=\r\n\ \ Name\:\ YunHwan\ Jeong\ (jeong)\r\n\ \ Course\:\ CSCI\ 241\ -\ Computer\ Science\ I\r\n\ \ Assignment\:\ 9\r\n\ \ \r\n\ Project/Class\ Description\:\r\n\ \ This\ class\ is\ instanciabl\ class\ that\ will\ be\ used\ to\ make\ objects.\r\n\ \ The\ other\ class\ will\ use\ this\ class.\r\n\ \ This\ instanciable\ class\ has\ 3\ constructors,\ a\ default,\ with\ 1\ parameter\ and\ with\ 2\ paramters.\r\n\ \ Additionally,\ it\ has\ a\ lot\ of\ instance\ methods,\ such\ as\ getters,\ setters,\ adjusting\ methods,\r\n\ \ printing\ methods\ and\ methods\ that\ use\ 2\ objects\ to\ compare\ and\ combine.\r\n\ \r\n\ Known\ Bugs\:\r\n\ \ none\r\n
comment1.params=
comment1.target=Volume()
comment1.text=\ \r\n\ Make\ 3\ constructors\:\r\n\ \ 1.\ A\ default\r\n\ \ 2.\ with\ 1\ parameter\:\ ounces\ \r\n\ \ 3.\ with\ 2\ parameters\:\ gallons\ &\ ounces\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Write\ instance\ methods\ for\ printing\ texts\ and\ comparing\ and\ combining\ objects;\ Here\ are\ prototypes\ for\ methods.\r\n\ \ 1.\ String\ toString()\ \ \ \ \ \ \ \ \:\ creates\ and\ returns\ a\ string\ that\ has\ information\ about\ an\ object.\r\n\ \ 2.\ String\ toStringLiters()\ \ \:\ creates\ and\ returns\ a\ string\ that\ holds\ text\ with\ liters\ of\ an\ object.\r\n\ \ 3.\ boolean\ equals(Volume)\ \ \ \:\ compares\ 2\ objects\ whether\ they\ are\ same\ or\ not\ and\ return\ the\ result.\r\n\ \ 4.\ Volume\ combine(Volume)\ \ \ \:\ combines\ 2\ objects\ and\ makes\ a\ new\ object\ and\ return\ the\ new\ one.\r\n
comment11.params=
comment11.target=java.lang.String\ toStringLiters()
comment12.params=objectParam
comment12.target=boolean\ equals(Volume)
comment13.params=objectParam
comment13.target=Volume\ combine(Volume)
comment2.params=ouncesParam
comment2.target=Volume(int)
comment3.params=gallonsParam\ ouncesParam
comment3.target=Volume(int,\ int)
comment4.params=
comment4.target=int\ getOunces()
comment4.text=\r\n\ Write\ getter(accessor)\ methods;\ Here\ are\ prototypes\ of\ getters.\r\n\ \ 1.\ int\ getOunces()\ \ \ \ \ \:\ returns\ the\ number\ of\ ounces\ in\ the\ volume.\r\n\ \ 2.\ int\ getGallons()\ \ \ \ \:\ returns\ the\ number\ of\ gallons\ in\ the\ volume.\r\n\ \ 3.\ int\ getOuncesLeft()\ \:\ returns\ the\ number\ of\ ounces\ that\ would\ be\ left\ over\ after\ getting\ gallon(s).\r\n
comment5.params=
comment5.target=int\ getGallons()
comment6.params=
comment6.target=int\ getOuncesLeft()
comment7.params=ouncesParam
comment7.target=void\ setOunces(int)
comment7.text=\r\n\ Write\ a\ setter(mutator)\ method;\ Here\ is\ a\ prototype\ of\ setter.\r\n\ \ \ void\ setOunces(int)\ \ \ \ \:\ sets\ instance\ variable\ as\ the\ parameter.\r\n
comment8.params=ouncesAdd
comment8.target=void\ addOunces(int)
comment8.text=\r\n\ Write\ adjusting\ methods;\ Here\ are\ prototypes\ of\ adjusting\ methods.\r\n\ \ 1.\ void\ addOunces(int)\ \ \:\ adds\ the\ instance\ variable\ and\ the\ parameter.\r\n\ \ 2.\ void\ pour(int)\ \ \ \ \ \ \ \:\ subtracts\ the\ parameter\ from\ the\ instance\ variable.\r\n
comment9.params=ouncesPour
comment9.target=void\ pour(int)
numComments=14
