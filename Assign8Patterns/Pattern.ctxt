#BlueJ class context
comment0.target=Pattern
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ This\ main\ method\ is\ going\ to\ invoke\ a\ lot\ of\ methods\ for\ patterns.\r\n\ First,\ it\ will\ call\ 'findDimension()'\ to\ ask\ the\ user\ for\ an\ array\ dimension.\r\n\ Then,\ it\ will\ declare\ a\ 2-dimensional\ array\ of\ characters\r\n\ using\ the\ number\ that\ the\ user\ input\ for\ rows\ and\ columns,\r\n\ and\ declare\ a\ character\ variable\ to\ hold\ a\ symbol;\ the\ character\ is\ '*'.\r\n\ Finally,\ it\ will\ invoke\ methods\ in\ this\ order\:\r\n\ 1.\ leftDiagonal(),\ 2.\ rightDiagonal(),\ 3.\ xPattern(),\ 4.\ everyOther(),\ 5.\ pointDown(),\ 6.pointUp(),\r\n\ and\ after\ each\ method,\ it\ will\ call\ 'print()'\ to\ print\ out\ pattern.\r\n
comment2.params=
comment2.target=int\ findDimension()
comment2.text=\r\n\ This\ method\ will\ take\ no\ parameter\ and\ return\ an\ integer\ which\ will\ be\ used\ for\ rows\ and\ columns.\r\n\ The\ number\ should\ be\ an\ odd\ number\ between\ 3\ and\ 11,\ inclusive.\r\n\ If\ the\ number\ entered\ is\ not\ fit,\ then\ keep\ asking\ until\ get\ an\ integer\ which\ is\ proper.\r\n
comment3.params=signParam\ dimensionParam
comment3.target=char[][]\ leftDiagonal(char,\ int)
comment3.text=\r\n\ 1.\ leftDiagonal(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ has\ a\ diagonal\ line\ from\ upper-left\ to\ lower-right.\r\n
comment4.params=signParam\ dimensionParam
comment4.target=char[][]\ rightDiagonal(char,\ int)
comment4.text=\r\n\ 2.\ rightDiagonal(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ has\ a\ diagonal\ line\ from\ upper-right\ to\ lower-left.\r\n
comment5.params=signParam\ dimensionParam
comment5.target=char[][]\ xPattern(char,\ int)
comment5.text=\r\n\ 3.\ xPattern(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ looks\ like\ a\ "X".\r\n
comment6.params=signParam\ dimensionParam
comment6.target=char[][]\ everyOther(char,\ int)
comment6.text=\r\n\ 4.\ everyOther(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ is\ filled\ of\ diamond\ shapes.\r\n\ It\ will\ have\ centers\ of\ diamonds\ at\ even\ columns,\ and\ centers\ are\ empty.\r\n
comment7.params=signParam\ dimensionParam
comment7.target=char[][]\ pointDown(char,\ int)
comment7.text=\r\n\ 5.\ pointDown(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ seems\ like\ an\ arrow-head\ that\ point\ downward.\r\n
comment8.params=signParam\ dimensionParam
comment8.target=char[][]\ pointUp(char,\ int)
comment8.text=\r\n\ 6.\ pointUp(char,int)\r\n\ This\ method\ will\ make\ a\ pattern\ that\ seems\ like\ an\ arrow-head\ that\ point\ upward.\r\n
comment9.params=arrayParam
comment9.target=void\ print(char[][])
comment9.text=\r\n\ This\ method\ will\ print\ out\ 2-dimensional\ arrays\ in\ a\ form.\r\n\ Therefore,\ it\ will\ have\ an\ array\ as\ a\ parameter,\ but\ will\ not\ return.\r\n\ The\ contents\ of\ the\ array\ will\ be\ displayed\ being\ wrapped\ by\ hyphens\:\ '-'.\r\n\ Additionally,\ there\ will\ be\ a\ space\ between\ every\ content\ as\ well\ as\ the\ first\ and\ the\ last.\r\n
numComments=10
